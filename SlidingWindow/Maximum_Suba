# Problem Description
# You are given an integer array C of size A. Now you need to find a subarray (contiguous elements) 
# so that the sum of contiguos elements is maximum
# But the sum must not exceed B 
# Input format : The first argument is the integer A 
#                The second argument is the integer B
#                The third argument is the integer array C 
# 
# Output format : Return a single integer which denotes the maximum sum
# A = 5
# B = 12 
# C = [2 , 1 , 3 , 4 , 5 ]
# Output : 12 
# Possible selection of { 3 , 4 , 5 } which sums up to 12 which is the maximum possible sum
# The possible subarrays are from the array of 2 , 1 , 3 , 4 , 5 
#                                              2                    2
#                                              2   1                3
#                                              2   1   3            6
#                                              2   1   3   4        10           
#                                              2   1   3   4   5    15           
#                                                  1                1
#                                                  1   3            4
#                                                  1   3   4        8
#                                                  1   3   4   5    13           
#                                                      3            3   
#                                                      3   4        7
#                                                      3   4   5    12          --> 3 4 5  which equals to 12 
#                                                          4        4
#                                                          4   5    9
# Below is the python code for the above approach and problem statement 
def Maximum_Subarray(A,B,C):                    # Where A is the array , B is the value provided by the user to check whether sub-array sum of elements which equal to B or not, if the B sum is there then we return 1 or if not equals then 0 
    for s in range(len(A)):                     # Outer loop
        for u in range(s,len(A)):                 # Inner loop 
            sum=0                               # sum loop iterates from 0 to u+1
            for b in range(s,u+1):         
                sum=sum+A[b]                    # summing up the elements 
            if sum==B:                          # if the summing element array equals to B
                return 1                        # Return 1   
    return 0                                    # if not sum of B is not found in the array then we return 0

A=[2,1,3,4,5]
B=12
C=5
print(Maximum_Subarray(A,B,C))
