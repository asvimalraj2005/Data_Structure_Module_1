# Problem Description
# You are given an array of N integers A1,A2,...,An and an integer B
# Return the count of distinct numbers in all windows of size B
# Formally, return an array of size N-B+1 where i'th element in this array contains numbers 
# of distinct elements in sequence Ai,Ai+1,...,A(i+B-1)
# Note : if B > N, return an empty array 
#
# Input Format : First argument is an integer array A
#                Second argument is an integer array B 
# Output Format : Return an integer array 
# 
# Example A = [1,2,1,3,4,3]
#         B = 3
#  A=[1, 2, 1, 3, 4, 3] and B = 3
#  All windows of size B are
#   [1, 2, 1]        
#   [2, 1, 3]
#   [1, 3, 4]
#   [3, 4, 3]
#   So, we return an array [2, 3, 3, 2].
# 
# The main goal is to get the distinct element count in each of the sub-array, where each sub-array is an window sized of 3 
# window 1 --> 1,2,1        where this window consist of one element as the distinct element that is 2 so the the count is 1 and this number will be appended to ans_list (where the distinct elements can be found by using dict or converting the sub-list into set by list slicing )
# window 2 --> 2,1,3        
# window 3 --> 1,3,4
# windwo 4 --> 3,4,3 
# 
# Below is the python approach 
def DistinctCount(A,B):
    ans_list=[]
    if B==0:                                # if window size B is none or zero
         return None                         # Then we will be returning None as the output 
    else: 
        
        for i in range(len(A)-B+1):         # Total length of list - B + 1 so we don't get the list out of bound error 
            List_slice=A[i:i+B]             # By using list slicing we are adding the elements from the i to i+B index 
            count_=len(set(List_slice))     # Now the elements are stored list_slice, we are converting the list_slice list into set, wher the duplicate element will get removed and then len of the list is said to be as the total count of the unique elements present in that sub-list 
            ans_list.append(count_)         # Now the count variable stores the unique count, now the unique count will be appended to the ans_list 
            
    return ans_list                         # Now the ans_list is returned out from the function 

A=[4,3,2,1,5,6,7]                       #    4 , 3 , 2 , 1 , 5 , 6 , 7
B=3                                     #    4 , 3 , 2  -> Distinct count by converting them to set now the count becomes 3, 3 is appended to the ans_list 
print(DistinctCount(A,B))               #    3 , 2 , 1  -> Distinct count by converting them to set now the count becomes 3, where every element in the sub-list are unique i.e set of 3,2,1 ; 3 is appended to ans_list 
                                        #    2 , 1 , 5  -> Distinct count in this window is also three now the three is appended to the ans_list 
                                        #    1 , 5 , 6  -> Distinct count in this windwo is also three now the three is appended to the ans_list 
                                        #    5 , 6 , 7  -> Distinct count in this window is also three now the three is appended to the ans_list 
                                        #    where the distinct count changes when an sub-list contains of 4,4,4 now converting it to set then sub-list become 4 then count is 1 now the count is appended to the ans_list 

# The above approach does not follow the HashMap method 
# 
